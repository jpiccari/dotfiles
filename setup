#!/bin/sh

CONFIG_DIR=$(pwd)/config
GIT_CONFIG_FILE=".gitconfig"

filelist=()
for file in $(ls -a $CONFIG_DIR)
do
	if [ -f "$CONFIG_DIR/$file" ] && [ "$file" != "$GIT_CONFIG_FILE" ]; then
		filelist[${#filelist[@]}]=$file
	fi
done


show_help() {
	echo "Commands:"
	echo "\t install - Installs symlinks to config"
	echo "\t clean - Removes symlinks to config"
}

install() {
	for file in ${filelist[@]}
	do
		echo "[INSTALL]: Adding $file to $HOME"
		ln -s $CONFIG_DIR/$file $HOME 2> /dev/null
	done

	git config --global include.path "$CONFIG_DIR/$GIT_CONFIG_FILE"

	echo "[INSTALL]: Adding Sublime Text 3 user settings"
	mkdir -p $HOME/Library/Application\ Support/Sublime\ Text\ 3/Packages
	cd $HOME/Library/Application\ Support/Sublime\ Text\ 3/Packages

	if [ -d "User" ]; then
		mv User User.backup
	fi

	ln -s $CONFIG_DIR/sublime User
	cd -
}

clean() {
	for file in ${filelist[@]}
	do
		echo "[CLEAN]: Removing config $file from $HOME"
		rm $HOME/$file 2> /dev/null
	done


	cd $HOME/Library/Application\ Support/Sublime\ Text\ 3/Packages
	if [ -L "User" ]; then
		echo "[CLEAN]: Restoring Sublime Text 3 user settings"
		rm User

		if [ -d "User.backup" ]; then
			mv User.backup User
		fi
	fi
	cd -
}

update() {
	echo "[UPDATE]: Upgrading to latest settings"
	clean &> /dev/null && \
		git fetch &> /dev/null && \
		git reset origin/master &> /dev/null && \
		install &> /dev/null
}

if [ `type -t $1`"" = "function" ]; then
	$1
else
	show_help
fi